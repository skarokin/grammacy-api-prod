events {
    worker_connections    1024;
}

http {

    server_tokens    off;
    charset          utf-8;

    # upstream server for our Flask app (runs on port 8000 according to gunicorn command)
    upstream app_server {
        server    flask:8000;
    }

    # whitelist of ips that are NOT rate limited (just grammacy.com)
    geo $white_list {
        default    0;
        
    }

    map $white_list $limit {
        0    "";
        1    $binary_remote_addr;
    }
    
    # non-whitelisted ips are rate limited
    limit_conn_zone         $limit    zone=connlimit:10m;  # 10mb shared memory zone for storing connection limits

    limit_conn connlimit    5;                             # 5 connections max per ip
    limit_conn_log_level    warn;                          # warn if 5 connections exceeded
    limit_conn_status       500;                           # return 500 status if 5 connections exceeded

    # limit num requests from non-whitelisted ip to 2 per second with up to 5 requests in the queue
    # further requests return a 503 error
    limit_req_zone      $limit      zone=one:10m    rate=2r/s;
    limit_req           zone=one    burst=5;
    limit_req_log_level warn;
    limit_req_status    503;

    server {

        listen 80;
        server_name _;
            
        location ~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        return 301 https://$host$request_uri; # redirect all http to https

    }

    server {

        listen 443 ssl;
        ssl_certificate /etc/letsencrypt/live/api.grammacy.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.grammacy.com/privkey.pem;
        server_name api.grammacy.com;
            
        # our flask app
        # / is GET request for model version
        # /predict is POST request for prediction given payload
        location / {
            proxy_pass http://app_server;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Prefix /;
        }

        location ~ /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

    }
}
