services:
  flask:
    container_name: flask
    build:
      context: ./api
      dockerfile: Dockerfile
    networks:
      - grammacy-api-network
    labels:
      - traefik.enable=true
      - traefik.http.routers.flask.rule=Host(`api.grammacy.com`)
      - traefik.http.routers.flask.entrypoints=web
      - traefik.http.routers.flask.entrypoints=websecure
      - traefik.http.routers.flask.tls=true
      - traefik.http.services.flask.loadbalancer.server.port=8000
      - traefik.http.routers.flask.tls.certresolver=letsencrypt
      - traefik.http.middlewares.rate-limit.ratelimit.average=100
      - traefik.http.middlewares.rate-limit.ratelimit.burst=10
      - traefik.http.routers.flask.middlewares=rate-limit@docker
      - traefik.http.middlewares.security-headers.headers.contentsecuritypolicy=upgrade-insecure-requests
      - traefik.http.middlewares.security-headers.headers.browserxssfilter=true
      - traefik.http.middlewares.security-headers.headers.framedeny=true
      - traefik.http.routers.flask.middlewares=security-headers@docker
    ports:
      - 8000:8000
    restart: unless-stopped

  traefik:
    container_name: traefik
    image: traefik:v3.3
    command: --providers.docker # in dev, --api.insecure=true
    depends_on:
      - flask
    ports:
      - 80:80      # http
      - 443:443    # https
      # - 8080:8080  # traefik dashboard (INSECURE)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/acme:/etc/traefik/acme
    restart: unless-stopped
    networks:
      - grammacy-api-network

networks:
  grammacy-api-network:
    driver: bridge